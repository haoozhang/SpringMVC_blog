1. 新建 Maven 项目，导入相关 jar 包
2. 右键 Add Framework Support，添加 Web App 支持
3. 编写 Servlet 类用于处理用户请求
4. 编写对应的 .jsp 文件
5. web.xml 中注册 Servlet，映射 Servlet 的 url
6. 配置 Tomcat，部署打包文件
7. 启动项目，在浏览器中测试

------

1. 新建 Maven 项目，引入相关依赖
2. 确保依赖出现在项目的打包文件中 (项目结构-Artifacts)，如果没有，添加 lib 文件夹包含以上依赖
3. 右键 Add Framework Support，添加 Web App 支持
4. web.xml 中注册 Spring 提供的 DispatcherServlet，并映射 Servlet 的 url
5. 编写 springmvc 的配置文件，添加处理映射器、处理器适配器、视图解析器
6. 编写业务逻辑 controller，实现 Controller 接口
7. 注册 controller 的 bean 实例
8. 编写对应的 .jsp 文件
9. 配置 Tomcat 启动测试

注解实现：
1. 如上，再避免静态资源过滤
2. 如上
3. 如上
4. 如上
5. springmvc 配置文件添加自动扫描、mvc 不处理静态资源、mvc 注解驱动，最后添加视图解析器
6. 业务逻辑 controller 使用 @Controller 注解和 @RequestMapping 注解
7. 省略，因为自动扫描到  @Controller 组件
8. 如上
9. 如上

- SpringMVC 默认加载处理映射器和处理器适配器，不用显式地指定

RestFul:
- 以 RestfulController 为例
- @RequestMapping 结合 @PathVariable 使用
- 隐藏变量，简化路径，更加安全

------

SSM 框架整合：
1. 新建 Maven 项目，导入相关依赖，添加静态资源导出配置
2. 右键工程 Add Framework Support，添加 Web App 支持
3. 建立 package 基本结构 (controller, service, mapper, pojo) 和配置框架 (mybatis-config, applicationContext)
   - Mybatis -
4. 编写数据库配置文件 db.properties，IDEA 关联数据库
5. 编写 mybatis-config.xml 配置文件 (typeAliases, mappers)
6. 编写实体类，可使用 Lombok
7. 编写 mapper 接口和对应的 mapper.xml
8. 编写 service 接口和对应的实现类
   - Spring -
9. 编写 spring-mapper.xml 配置文件: 关联数据源文件，配置连接池，注册 SqlSessionFactory bean 实例，配置 mapper 接口扫描包
10. 编写 spring-service.xml 配置文件: 自动扫描组件注册 bean 实例，自动装配 mapper 对象依赖，声明式事务管理
    - SpringMVC -
11. web.xml 文件中配置 DispatcherServlet，SpringMVC 乱码问题
12. 绑定 spring-mvc.xml 配置文件: 自动扫描组件，配置静态资源，mvc 注解驱动，视图解析器
13. 整合 Spring 的配置文件 applicationContext.xml
    - Controller 层和视图层 -
14. 编写 BookController 类，查询全部书籍
15. 编写书籍列表视图页面 allBooks.jsp
16. 编写首页 index.jsp
    - 配置Tomcat，测试是否成功 -
17. BookController 类: 添加书籍
18. 添加书籍页面: addBook.jsp
19. BookController 类: 更新书籍
20. 更新书籍页面: addBook.jsp
21. BookController 类: 删除书籍
22. 启动 Tomcat，运行项目!
    - 添加搜索书籍功能 -
23. 从下往上，先写 mapper 层，再写 service 层，最后由 controller 层调用
24. 编写前端界面
25. Tomcat 运行项目！

------

- iframe
- jQuery.ajax: $.post
- 注册提示

------

1. 新建 SpringMVC 项目，包括引入依赖、添加 Web 支持、web.xml、applicationContext.xml、controller
2. 编写 Interceptor 类
3. applicationContext.xml 中配置 mvc:interceptors
4. 编写 controller 接受请求
5. Tomcat 启动测试

